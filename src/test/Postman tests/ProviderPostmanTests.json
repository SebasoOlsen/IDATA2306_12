{
  "info": {
    "name": "ProviderPostmanTests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Login - Get JWT Token",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"adminpassword\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/login",
          "host": ["{{base_url}}"],
          "path": ["login"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Login successful\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "var json = pm.response.json();",
              "pm.collectionVariables.set(\"token\", json.token);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Create Provider",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"TestProvider\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/providers/admin/createProvider",
          "host": ["{{base_url}}"],
          "path": ["api", "providers", "admin", "createProvider"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Provider created\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get All Providers",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/providers/admin/allProviders",
          "host": ["{{base_url}}"],
          "path": ["api", "providers", "admin", "allProviders"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Providers retrieved\", function () {",
              "    pm.response.to.have.status(200);",
              "    let data = pm.response.json();",
              "    pm.expect(data).to.be.an('array');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Provider By ID",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/api/providers/public/search/1",
          "host": ["{{base_url}}"],
          "path": ["api", "providers", "public", "search", "1"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Provider found or not\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Update Provider",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"id\": 1,\n  \"name\": \"UpdatedProvider\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/providers/admin/updateProvider/1",
          "host": ["{{base_url}}"],
          "path": ["api", "providers", "admin", "updateProvider", "1"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Provider updated or not found\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Delete Provider",
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/providers/admin/deleteProvider/1",
          "host": ["{{base_url}}"],
          "path": ["api", "providers", "admin", "deleteProvider", "1"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Provider deleted\", function () {",
              "    pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "token",
      "value": ""
    }
  ]
}




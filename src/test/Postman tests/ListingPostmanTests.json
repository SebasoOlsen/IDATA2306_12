{
  "info": {
    "name": "ListingPostmanTests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Login - Get JWT Token",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"adminpassword\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/login",
          "host": ["{{base_url}}"],
          "path": ["login"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Login successful\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Save token\", function () {",
              "    var json = pm.response.json();",
              "    pm.collectionVariables.set(\"token\", json.token);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Create Listing",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"roomId\": 1,\n  \"providerId\": 1,\n  \"price\": 1200,\n  \"currency\": \"USD\",\n  \"hotelId\": 1\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/listings/admin/createListing",
          "host": ["{{base_url}}"],
          "path": ["api", "listings", "admin", "createListing"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Listing created\", function () {",
              "    pm.response.to.have.status(201);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Delete Listing",
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/listings/admin/deleteListing/1",
          "host": ["{{base_url}}"],
          "path": ["api", "listings", "admin", "deleteListing", "1"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Listing deleted\", function () {",
              "    pm.response.to.have.status(204);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Listings by Hotel ID",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/api/listings/public/hotel/1",
          "host": ["{{base_url}}"],
          "path": ["api", "listings", "public", "hotel", "1"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Listings returned\", function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Listing by ID",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/api/listings/public/search/1",
          "host": ["{{base_url}}"],
          "path": ["api", "listings", "public", "search", "1"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Listing found or not\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
              "});"
            ]
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "token",
      "value": ""
    }
  ]
}
